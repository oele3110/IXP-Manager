<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class RpkiRoa extends \Entities\RpkiRoa implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getRsPrefixId()
    {
        $this->__load();
        return parent::getRsPrefixId();
    }

    public function setRsPrefixId($rs_prefix_id)
    {
        $this->__load();
        return parent::setRsPrefixId($rs_prefix_id);
    }

    public function getAsn()
    {
        $this->__load();
        return parent::getAsn();
    }

    public function setAsn($asn)
    {
        $this->__load();
        return parent::setAsn($asn);
    }

    public function getPrefix()
    {
        $this->__load();
        return parent::getPrefix();
    }

    public function setPrefix($prefix)
    {
        $this->__load();
        return parent::setPrefix($prefix);
    }

    public function getMax()
    {
        $this->__load();
        return parent::getMax();
    }

    public function setMax($max)
    {
        $this->__load();
        return parent::setMax($max);
    }

    public function getMin()
    {
        $this->__load();
        return parent::getMin();
    }

    public function setMin($min)
    {
        $this->__load();
        return parent::setMin($min);
    }

    public function setRpkiValidation(\Entities\RpkiValidation $rpkiValidation = NULL)
    {
        $this->__load();
        return parent::setRpkiValidation($rpkiValidation);
    }

    public function getRpkiValidation()
    {
        $this->__load();
        return parent::getRpkiValidation();
    }

    public function addRpkiValidation(\Entities\RpkiValidation $rpkiValidation)
    {
        $this->__load();
        return parent::addRpkiValidation($rpkiValidation);
    }

    public function removeRpkiValidation(\Entities\RpkiValidation $rpkiValidation)
    {
        $this->__load();
        return parent::removeRpkiValidation($rpkiValidation);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'asn', 'prefix', 'max', 'min', 'rs_prefix_id', 'RpkiValidation');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}